name: Rebuild Video on File Changes

on:
  push:
    paths:
      - '**/*.png'
      - '**/*.mp3'
      - '**/*.pdf'
  workflow_dispatch:

jobs:
  build-video:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout your own repository first (without deleting anything)
    - name: Checkout current repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    # Step 2: Pull images from the MARP repository and merge them into assets/images
    - name: Pull images from MARP repo
      uses: actions/checkout@v3
      with:
        repository: ajlab-gh/devops_content_creation_marp
        path: assets/images
        sparse-checkout: true
        fetch-depth: 1

    - name: Set sparse checkout path for MARP images
      run: |
        git sparse-checkout set outputs/images
      working-directory: assets/images

    # Step 3: Pull audio files from the TTS repository and merge them into assets/audio
    - name: Pull audio from TTS repo
      uses: actions/checkout@v3
      with:
        repository: ajlab-gh/devops_content_creation_tts
        path: assets/audio
        sparse-checkout: true
        fetch-depth: 1

    - name: Set sparse checkout path for TTS audio
      run: |
        git sparse-checkout set audio
      working-directory: assets/audio

    # Step 4: Debug: Check if the files are correctly fetched and merged
    - name: Debug: List images and audio files
      run: |
        echo "Listing images:"
        ls -la assets/images
        echo "Listing audio:"
        ls -la assets/audio

    # Step 5: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Step 6: Install ffmpeg
    - name: Install ffmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    # Step 7: Run the video processing script
    - name: Run video processing script
      run: |
        python scripts/create_video1.py


    # Optional: Push the newly created video back to the repository
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Commit PDF to the repository
      run: |
        git add assets/outputs/*.mp4
        git commit -m "Auto-generated video from new content"
        git push
      env:
        GH_TOKEN: ${{ github.token }}

